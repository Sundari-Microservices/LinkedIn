#spring.h2.console.enabled = true
## Here we are using test database.
#spring.datasource.url = jdbc:h2:mem:test
#spring.jpa.generate-ddl=true
#
## to log sql queries generated by hibernate into console.
#spring.jpa.show-sql=true
#
## configures the behaviour of hibernates schema generation tool
##behind the scenes spring boot uses hibernate in creating tables.
## spring boot will create db schema once the application
## gets started and drops it after application shutdowns.
#
##spring.jpa.hibernate.ddl-auto=create-drop
#
##Instead of creating and dropping schema everytime, we can update it.
#spring.jpa.hibernate.ddl-auto=update
#
## Inorder to expose all the end points in browser
#management.endpoints.web.exposure.include=*
#
## Inorder to get all the details of health endpoints everytime.
#management.endpoint.health.show-details=always

# We can add info like this, to show information to outside world.
info.app.name = LinkedIn
info.app.description = LinkedIn built by SUMA Group, inorder to ease of job searching.
info.app.version = 1.0.0

# This helps in getting applications information via "localhost:8080/actuator/info"
management.info.env.enabled=true

management.endpoint.shutdown.enabled=true
server.shutdown = graceful
management.endpoint.shutdown.role=ACTUATOR_ADMIN
spring.security.user.roles=ACTUATOR_ADMIN

## PostgreSQL
server.port= 8080
spring.datasource.url=jdbc:postgresql://localhost:5432/jobapp
spring.datasource.username=user
spring.datasource.password=password
spring.jpa.database=POSTGRESQL
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect